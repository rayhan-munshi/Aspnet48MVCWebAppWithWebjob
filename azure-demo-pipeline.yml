trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'AnyCPU'
  buildConfiguration: 'Release'

stages:
- stage: build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
 
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      displayName: 'Build Aspnet48MVCWebAppWithWebjob/Aspnet48MVCWebAppWithWebjob.csproj'
      inputs:
        solution: Aspnet48MVCWebAppWithWebjob/Aspnet48MVCWebAppWithWebjob.csproj
        vsVersion: "latest"
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\" '
        platform: $(BuildPlatform)
        configuration: $(BuildConfiguration)
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: deploy
  displayName: 'Deploy Stage'
  dependsOn: build
  jobs:
  - job: Deploy
    displayName: 'Deploy Job'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Artifact'
      inputs:
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy to ix-safety-2'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'DemoSubscription'
        appType: 'webApp'
        WebAppName: 'demo-asp-net-4'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
